//Задание 4.

// Реализовать следующее консольное приложение подобно примеру, 
// который разбирался в видео. Реализуйте его на прототипах.

// Определить иерархию электроприборов. Включить некоторые в розетку. 
// Посчитать потребляемую мощность. 

// Таких приборов должно быть, как минимум, два 
// (например, настольная лампа и компьютер). 
// Выбрав прибор, подумайте, какими свойствами он обладает.

// План:
// Определить родительскую функцию с методами, которые включают/выключают 
// прибор из розетки.
// Создать делегирующую связь [[Prototype]] для двух конкретных приборов.
// У каждого из приборов должны быть собственные свойства и, желательно, методы, 
// отличные от родительских методов.
// Создать экземпляры каждого прибора.
// Вывести в консоль и посмотреть результаты работы, гордиться собой. :)
// Общие требования:
// Имена функций, свойств и методов должны быть информативными.
// Соблюдать best practices:
// использование camelCase нотации для переменных и методов, 
// PascalCase для названия функций-конструкторов и классов;
// информативные имена (а не a, b);
// четкая связь между классом и его экземплярами (класс описывает множество, 
// а экземпляр конкретную реализацию);
// использование синтаксиса ES6 (кроме функции-конструкторов) и т. д.

function Device(power, name) {
this.voltage = "220 v",
this.name = name,
this.power = power,
this.connected=false
};

Device.prototype.getPower = function() {
console.log(`Power is ${power} Watts`);
};

Device.prototype.isOn = function(){
if (this.connected===false){this.connected=true;
console.log("The device is switched on");}else{console.log("Already enabled");}
};

Device.prototype.isOff = function(){
if (this.connected===true){this.connected=false;
console.log("The device is switched off");}else{console.log("Already turned off");}

};

function Tools(power, name, batteryRange, voltage) {
this.power = power,
this.name = name,
this.batteryRange = batteryRange,
this.voltage = voltage
};

Tools.prototype = new Device()


Tools.prototype.rechargeBegin = function() {
console.log("Battery is charging")
};

Tools.prototype.rechargeEnd = function() {
console.log("Charged")
};


Tools.prototype.getBatteryRange = function() {
console.log(`Range of battery is ${this.batteryRange}`)
};

const lamp = new Device("80A", "Lamp");
console.log(lamp);

const eSaw = new Tools("2200W", "eSaw", "6000 mA", "24V");
console.log(eSaw);
lamp.isOn();
eSaw.getBatteryRange();
